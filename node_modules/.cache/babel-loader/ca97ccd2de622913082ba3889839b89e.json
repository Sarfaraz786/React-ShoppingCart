{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mohammad.alam\\\\Documents\\\\GitHub\\\\React-ShoppingCart\\\\src\\\\components\\\\Products\\\\Products.js\";\nimport React from \"react\";\nimport { Grid, Input, Table } from \"semantic-ui-react\"; // Redux\n\nimport { connect } from \"react-redux\";\nimport Product from \"./Product/Product\";\nimport { fetchProduct } from \"../../redux/Shopping/shopping-actions\";\n\nclass Products extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      search: '',\n      categoryOptions: [],\n      selectedCategory: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://616d9938a83a850017caa625.mockapi.io/grocery').then(response => response.json()).then(json => {\n      console.log('Products', json);\n      var products = json.map(function (el) {\n        var o = Object.assign({}, el);\n        o.qty = 0;\n        return o;\n      });\n      this.props.fetchProduct(products);\n    });\n  }\n\n  searchTbleRow(event) {\n    let searchValue = event.target.value;\n    this.setState({\n      search: searchValue\n    });\n  }\n\n  filtrTableRow(e) {\n    var selectedVal = e.target.value;\n    this.setState({\n      selectedCategory: selectedVal\n    });\n  }\n\n  render() {\n    // Filter the table data\n    let sProducts = this.props.products || [],\n        searchString = this.state.search.trim().toLowerCase();\n\n    if (this.state.selectedCategory) {\n      sProducts = sProducts.filter(e => e.type.toLowerCase().match(this.state.selectedCategory));\n    }\n\n    if (searchString.length > 0) {\n      // We are searching. Filter the results.\n      sProducts = sProducts.filter(e => e.name.toLowerCase().match(searchString));\n    } // table filter by dropdown\n\n\n    const categoryName = this.props.products.map(item => item.type);\n    this.state.categoryOptions = categoryName.filter((c, index) => categoryName.indexOf(c) === index);\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Grid, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      icon: \"search\",\n      placeholder: \"Search by name\",\n      onChange: e => this.searchTbleRow(e),\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    })), /*#__PURE__*/React.createElement(Grid.Column, {\n      width: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ui icon input\",\n      style: {\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"filter-select\",\n      onChange: e => this.filtrTableRow(e),\n      style: {\n        textTransform: \"capitalize\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      kay: \"selectAll\",\n      value: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, \"Select category\"), this.state.categoryOptions.map(item => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        key: item,\n        value: item,\n        style: {\n          textTransform: \"capitalize\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 22\n        }\n      }, item);\n    }))))), /*#__PURE__*/React.createElement(Table, {\n      celled: true,\n      padded: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Table.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table.Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      singleLine: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, \"Category\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(Table.HeaderCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, \"Add/Remove Item\"))), /*#__PURE__*/React.createElement(Table.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }\n    }, sProducts.map(product => /*#__PURE__*/React.createElement(Product, {\n      key: product.id,\n      product: product,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    products: state.shop.products\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchProduct: data => dispatch(fetchProduct(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);","map":{"version":3,"sources":["C:/Users/mohammad.alam/Documents/GitHub/React-ShoppingCart/src/components/Products/Products.js"],"names":["React","Grid","Input","Table","connect","Product","fetchProduct","Products","Component","constructor","props","state","search","categoryOptions","selectedCategory","componentDidMount","fetch","then","response","json","console","log","products","map","el","o","Object","assign","qty","searchTbleRow","event","searchValue","target","value","setState","filtrTableRow","e","selectedVal","render","sProducts","searchString","trim","toLowerCase","filter","type","match","length","name","categoryName","item","c","index","indexOf","width","textTransform","product","id","mapStateToProps","shop","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Grid, Input, Table } from \"semantic-ui-react\";\r\n\r\n// Redux\r\nimport { connect } from \"react-redux\";\r\nimport Product from \"./Product/Product\";\r\nimport {\r\n  fetchProduct\r\n} from \"../../redux/Shopping/shopping-actions\";\r\n\r\nclass Products extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: '',\r\n      categoryOptions: [],\r\n      selectedCategory: '',\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://616d9938a83a850017caa625.mockapi.io/grocery')\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      console.log('Products', json)\r\n      var products = json.map(function(el) {\r\n        var o = Object.assign({}, el);\r\n        o.qty = 0;\r\n        return o;\r\n      })\r\n      this.props.fetchProduct(products)\r\n    })\r\n  }\r\n\r\n  searchTbleRow(event) {\r\n    let searchValue = event.target.value;\r\n    this.setState({ search: searchValue });\r\n  }\r\n  filtrTableRow(e) {\r\n    var selectedVal = e.target.value;\r\n    this.setState({ selectedCategory: selectedVal });\r\n  };\r\n   \r\n   render() {\r\n     // Filter the table data\r\n    let sProducts = this.props.products || [],\r\n    searchString = this.state.search.trim().toLowerCase();\r\n    if(this.state.selectedCategory) {\r\n      sProducts = sProducts.filter((e) => e.type.toLowerCase().match(this.state.selectedCategory));\r\n    }\r\n    if (searchString.length > 0) {\r\n      // We are searching. Filter the results.\r\n      sProducts = sProducts.filter((e) => e.name.toLowerCase().match(searchString));\r\n    }\r\n    // table filter by dropdown\r\n    const categoryName = this.props.products.map(item => item.type);\r\n    this.state.categoryOptions = categoryName.filter((c,index) => categoryName.indexOf(c) === index);\r\n\r\n  return (\r\n    <>\r\n    <Grid>\r\n      <Grid.Column width={4}>\r\n        <Input icon='search' placeholder='Search by name' onChange={(e) => this.searchTbleRow(e)} style={{width: \"100%\"}} />\r\n      </Grid.Column>\r\n      <Grid.Column width={4}>\r\n        <div className=\"ui icon input\" style={{width: \"100%\"}}>\r\n          <select className=\"filter-select\" onChange={(e) => this.filtrTableRow(e)} style={{textTransform:\"capitalize\"}}>\r\n            <option kay='selectAll' value=\"\">Select category</option>\r\n            {/* <option kay='dairy' value=\"dairy\">Dairy</option>\r\n            <option kay='fruit' value=\"fruit\">Fruit</option>\r\n            <option kay='vegetable' value=\"vegetable\">Vegetable</option>\r\n            <option kay='bakery' value=\"bakery\">Bakery</option>\r\n            <option kay='vegan' value=\"vegan\">Vegan</option>\r\n            <option kay='meat' value=\"meat\">Meat</option> */}\r\n            {this.state.categoryOptions.map((item) => {\r\n              return <option key={item} value={item} style={{textTransform:\"capitalize\"}}>{item}</option>;\r\n            })}\r\n          </select>\r\n        </div>\r\n      </Grid.Column>\r\n    </Grid>\r\n      \r\n    <Table celled padded>\r\n      <Table.Header>\r\n      <Table.Row>\r\n          <Table.HeaderCell singleLine>Name</Table.HeaderCell>\r\n          <Table.HeaderCell>Category</Table.HeaderCell>\r\n          <Table.HeaderCell>Price</Table.HeaderCell>\r\n          <Table.HeaderCell>Add/Remove Item</Table.HeaderCell>\r\n      </Table.Row>\r\n      </Table.Header>\r\n      <Table.Body>\r\n        {sProducts.map((product) => (\r\n          <Product key={product.id} product={product} />\r\n        ))}\r\n      </Table.Body>\r\n    </Table>\r\n    </>\r\n  );\r\n};\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    products: state.shop.products,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    fetchProduct: (data) => dispatch(fetchProduct(data))\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Products);\r\n"]},"metadata":{},"sourceType":"module"}