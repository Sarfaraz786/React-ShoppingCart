{"ast":null,"code":"import * as actionTypes from \"./shopping-types\"; // From this url get below all products https://muigrocery.free.beeceptor.com/groceries\n\nconst INITIAL_STATE = {\n  products: [],\n  cart: []\n};\n\nconst shopReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case actionTypes.PRODUCT_LIST:\n      return { ...state,\n        products: action.payload.data\n      };\n\n    case actionTypes.ADD_TO_CART:\n      // Great Item data from products array\n      const item = state.products.find(product => product.id === action.payload.id); // Check if Item is in cart already\n\n      const inCart = state.cart.find(item => item.id === action.payload.id ? true : false);\n      console.log('Cart Reducer ', state.cart);\n      return { ...state,\n        cart: inCart ? state.cart.map(item => item.id === action.payload.id ? { ...item,\n          qty: item.qty + 1\n        } : item) : [...state.cart, { ...item,\n          qty: 1\n        }],\n        products: state.products.map(product => product.id === action.payload.id ? { ...product,\n          qty: product.qty + 1\n        } : product)\n      };\n\n    case actionTypes.REMOVE_TO_CART:\n      // Great Item data from products array\n      const rItem = state.products.find(product => product.id === action.payload.id); // Check if Item is in cart already\n\n      const inRCart = state.cart.find(rItem => rItem.id === action.payload.id ? true : false);\n      return { ...state,\n        cart: inRCart ? state.cart.map(rItem => rItem.id === action.payload.id ? { ...rItem,\n          qty: rItem.qty - 1\n        } : rItem) : [...state.cart, { ...rItem,\n          qty: 1\n        }],\n        products: state.products.map(product => product.id === action.payload.id ? { ...product,\n          qty: product.qty - 1 < 0 ? 0 : product.qty - 1\n        } : product)\n      };\n\n    case actionTypes.REMOVE_FROM_CART:\n      return { ...state,\n        cart: state.cart.filter(item => item.id !== action.payload.id),\n        products: state.products.filter(item => item.id !== action.payload.id)\n      };\n\n    case actionTypes.ADJUST_ITEM_QTY:\n      return { ...state,\n        cart: state.cart.map(item => item.id === action.payload.id ? { ...item,\n          qty: +action.payload.qty\n        } : item)\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["C:/Users/mohammad.alam/Documents/GitHub/React-ShoppingCart/src/redux/Shopping/shopping-reducer.js"],"names":["actionTypes","INITIAL_STATE","products","cart","shopReducer","state","action","type","PRODUCT_LIST","payload","data","ADD_TO_CART","item","find","product","id","inCart","console","log","map","qty","REMOVE_TO_CART","rItem","inRCart","REMOVE_FROM_CART","filter","ADJUST_ITEM_QTY"],"mappings":"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","sourcesContent":["import * as actionTypes from \"./shopping-types\";\r\n\r\n// From this url get below all products https://muigrocery.free.beeceptor.com/groceries\r\n\r\nconst INITIAL_STATE = {\r\n  products: [],\r\n  cart: [],\r\n};\r\n\r\nconst shopReducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n\tcase actionTypes.PRODUCT_LIST:\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tproducts: action.payload.data\r\n\t\t}\r\n    case actionTypes.ADD_TO_CART:\r\n      // Great Item data from products array\r\n      const item = state.products.find(\r\n        (product) => product.id === action.payload.id\r\n      );\r\n      // Check if Item is in cart already\r\n      const inCart = state.cart.find((item) =>\r\n        item.id === action.payload.id ? true : false\r\n      );\r\n      console.log('Cart Reducer ', state.cart)\r\n      return {\r\n        ...state,\r\n        cart: inCart\r\n          ? state.cart.map((item) =>\r\n              item.id === action.payload.id\r\n                ? { ...item, qty: item.qty + 1 }\r\n                : item\r\n            )\r\n\t\t: [...state.cart, { ...item, qty: 1 }],\r\n\t\tproducts: state.products.map((product) =>\r\n\t\t\tproduct.id === action.payload.id\r\n\t\t\t? { ...product, qty: product.qty + 1 }\r\n\t\t\t: product\r\n\t\t)\r\n          \r\n      };\r\n\r\n    case actionTypes.REMOVE_TO_CART:\r\n        // Great Item data from products array\r\n        const rItem = state.products.find(\r\n          (product) => product.id === action.payload.id\r\n        );\r\n        // Check if Item is in cart already\r\n        const inRCart = state.cart.find((rItem) =>\r\n          rItem.id === action.payload.id ? true : false\r\n        );\r\n  \r\n        return {\r\n\t\t\t...state,\r\n\t\t\tcart: inRCart\r\n\t\t\t  ? state.cart.map((rItem) =>\r\n\t\t\t\t  rItem.id === action.payload.id\r\n\t\t\t\t\t? { ...rItem, qty: rItem.qty - 1 } \r\n\t\t\t\t\t: rItem\r\n\t\t\t\t)\r\n\t\t\t  : [...state.cart, { ...rItem, qty: 1 }],\r\n\t\t\t  \r\n\t\t\tproducts: state.products.map((product) =>\r\n\t\t\t  product.id === action.payload.id\r\n\t\t\t  ? { ...product, qty: product.qty-1 < 0 ? 0 : product.qty - 1 }\r\n\t\t\t  : product\r\n\t\t  )\r\n        };\r\n    case actionTypes.REMOVE_FROM_CART:\r\n      return {\r\n        ...state,\r\n        cart: state.cart.filter((item) => item.id !== action.payload.id),\r\n\t\tproducts: state.products.filter((item) => item.id !== action.payload.id),\r\n      };\r\n\tcase actionTypes.ADJUST_ITEM_QTY:\r\n\treturn {\r\n\t\t...state,\r\n\t\tcart: state.cart.map((item) =>\r\n\t\titem.id === action.payload.id\r\n\t\t\t? { ...item, qty: +action.payload.qty }\r\n\t\t\t: item\r\n\t\t),\r\n\t};\r\n  default:\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default shopReducer;\r\n"]},"metadata":{},"sourceType":"module"}